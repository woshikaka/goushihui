<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/data/repository http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd">
	<context:component-scan base-package="com.sfmy.gsh" />
	<import resource="classpath*:/shiro.xml" />
	<bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
			</list>
		</property>
	</bean>

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="properties" ref="configProperties" />
	</bean>

	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		<property name="poolProperties">
			<bean class="org.apache.tomcat.jdbc.pool.PoolProperties">
				<property name="driverClassName" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
				<property name="jmxEnabled" value="true" />
				<property name="testWhileIdle" value="true" />
				<property name="testOnBorrow" value="true" />
				<property name="testOnReturn" value="false" />
				<property name="defaultAutoCommit" value="false" />
				<property name="validationInterval" value="30000" />
				<property name="validationQuery" value="SELECT 1" />
				<property name="timeBetweenEvictionRunsMillis" value="30000" />
				<property name="maxActive" value="500" />
				<property name="initialSize" value="20" />
				<property name="maxWait" value="600000" /><!--600秒即10分钟 -->
				<property name="minEvictableIdleTimeMillis" value="30000" />
				<property name="minIdle" value="10" />
				<property name="logAbandoned" value="false" />
				<property name="removeAbandoned" value="true" />
				<property name="removeAbandonedTimeout" value="600" /><!--600秒即10分钟 -->
				<property name="jdbcInterceptors" value="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer" />
			</bean>
		</property>
	</bean>

	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<!-- Set base package of your entities -->
		<property name="packagesToScan" value="com.sfmy.gsh.entity" />
		<!-- Set share cache mode -->
		<property name="sharedCacheMode" value="ENABLE_SELECTIVE" />
		<!-- Set validation mode -->
		<property name="validationMode" value="NONE" />
		<property name="jpaProperties">
			<props>
				<!-- Configures the used database dialect. This allows Hibernate to create SQL that is optimized for the used database. -->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>

				<!-- Specifies the action that is invoked to the database when the Hibernate SessionFactory is created or closed. -->
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>

				<!-- Configures the naming strategy that is used when Hibernate creates new database objects and schema elements -->
				<prop key="hibernate.ejb.naming_strategy">${hibernate.ejb.naming_strategy}</prop>

				<!-- If the value of this property is true, Hibernate writes all SQL statements to the console. -->
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>

				<!-- If the value of this property is true, Hibernate will use prettyprint when it writes SQL to the console. -->
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven />

	<jpa:repositories base-package="com.sfmy.gsh.dao" />

	<bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
	</bean>

	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="cacheManagerFactory" />
	</bean>
</beans>
